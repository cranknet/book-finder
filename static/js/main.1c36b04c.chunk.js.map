{"version":3,"sources":["components/Header.jsx","components/Spinner.jsx","helpers/booksDataHelper.js","components/BookCard.jsx","components/Main.jsx","components/Footer.jsx","components/SearchInput.jsx","constants/constants.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","Fragment","className","href","src","alt","id","children","Spinner","booksDataHelper","titleHandler","title","authorsHandler","authors","Array","isArray","descriptionHandler","description","slice","imageHandler","imageLinks","hasOwnProperty","linkHandler","link","publisherHandler","publisher","publishedDateHandler","pubDate","BookCard","booksData","data","items","map","book","_book$volumeInfo","volumeInfo","infoLink","publishedDate","target","rel","dateTime","Main","Loading","isLoading","components_Spinner","undefined","isDataLoaded","totalItems","components_BookCard","Footer","SearchInput","handleChange","e","_this","handler","value","handleKeyUp","keyUpHandler","_this$props","this","searchValue","inputSpinner","concat","type","placeholder","name","onChange","onKeyUp","Component","API_URL","API_URL_FIELDS","App","state","dataLoaded","error","handleInput","setState","handleSearch","keyCode","length","API","getBooks","URL","axios","get","then","result","catch","err","console","log","_this$state","components_Header","SearchInput_SearchInput","components_Main","components_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1c36b04c.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Header = props => {\n  return (\n    <React.Fragment>\n      {/* Hero Section */}\n      <section className=\"hero is-small is-light is-bold\">\n        {/* Hero Head */}\n        <div className=\"hero-head\">\n          <nav className=\"navbar\">\n            <div className=\"container\">\n              <div className=\"navbar-brand\">\n                <a href=\"#Home\" className=\"navbar-item\">\n                  <img src=\"Logo.png\" alt=\"Book Finder\" className=\"is-96x96\" />\n                </a>\n              </div>\n              <div id=\"navbarMenuHeroA\" className=\"navbar-menu\">\n                <div className=\"navbar-end\">\n                  <a href=\"#Home\" className=\"navbar-item is-active\">\n                    Home\n                  </a>\n                  <a\n                    href=\"https://github.com/cranknet/book-finder\"\n                    className=\"navbar-item\"\n                  >\n                    Project\n                  </a>\n                  <span className=\"navbar-item\">\n                    <a\n                      href=\"https://github.com/cranknet/book-finder\"\n                      className=\"button is-primary is-inverted\"\n                    >\n                      <span className=\"icon\">\n                        <i className=\"fa fa-github\" />\n                      </span>\n                      <span>Download</span>\n                    </a>\n                  </span>\n                </div>\n              </div>\n            </div>\n          </nav>\n        </div>\n        {/* Hero Body */}\n        <div className=\"hero-body\">\n          <div className=\"container has-text-centered\">\n            <h1 className=\"title\">Book Finder</h1>\n            <h2 className=\"subtitle\">Powered By Google API</h2>\n            <div id=\"search-form\" className=\"columns\">\n              <div className=\"column is-half is-offset-one-quarter\">\n                {/* Search Component as a child to Header */}\n                {props.children}\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n      {/* End Hero Section */}\n    </React.Fragment>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\nconst Spinner = () => {\n  return (\n    <div className=\"spinner\">\n      <img src=\"spinner.gif\" alt=\"Loading...\" />\n    </div>\n  );\n};\n\nexport default Spinner;\n","const booksDataHelper = {\n  titleHandler: title => {\n    if (typeof title === \"string\") return title;\n    return \"No Title\";\n  },\n  authorsHandler: authors => {\n    if (Array.isArray(authors)) return authors[0];\n    return \"No Authors\";\n  },\n  descriptionHandler: description => {\n    if (typeof description === \"string\")\n      return description.slice(0, 90) + \"...\";\n    return \"No Description\";\n  },\n  imageHandler: imageLinks => {\n    if (\n      typeof imageLinks === \"object\" &&\n      imageLinks.hasOwnProperty(\"thumbnail\")\n    )\n      return imageLinks[\"thumbnail\"];\n  },\n  linkHandler: link => {\n    if (typeof link === \"string\") return link;\n    return \"#No-Link-Provided\";\n  },\n  publisherHandler: publisher => {\n    if (typeof publisher === \"string\") return publisher;\n    return \"No Publisher\";\n  },\n  publishedDateHandler: pubDate => {\n    if (typeof pubDate === \"string\") return pubDate;\n    return \"No Date\";\n  }\n};\n\nexport default booksDataHelper;\n","import React from \"react\";\nimport booksDataHelper from \"../helpers/booksDataHelper\";\nconst BookCard = props => {\n  const booksData = props.data.items;\n  const {\n    titleHandler,\n    authorsHandler,\n    descriptionHandler,\n    imageHandler,\n    linkHandler,\n    publishedDateHandler,\n    publisherHandler\n  } = booksDataHelper;\n  return (\n    <React.Fragment>\n      {booksData.map(book => {\n        const {\n          title,\n          authors,\n          description,\n          imageLinks,\n          infoLink,\n          publishedDate,\n          publisher\n        } = book.volumeInfo;\n        return (\n          <div className=\"column is-one-quarter-desktop is-half-tablet is-half-mobile\">\n            <div className=\"card\">\n              <div className=\"card-image\">\n                <figure className=\"image is-square\">\n                  <img src={imageHandler(imageLinks)} alt=\"Book\" />\n                </figure>\n              </div>\n              <div className=\"card-content\">\n                <div className=\"media\">\n                  <div className=\"media-content\">\n                    <p className=\"title is-5\">\n                      <a\n                        href={linkHandler(infoLink)}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                      >\n                        {titleHandler(title)}\n                      </a>\n                    </p>\n                    <span className=\"subtitle is-6 has-text-weight-bold\">\n                      Author: {authorsHandler(authors)}\n                    </span>\n                    <br />\n                    <span className=\"subtitle is-6 has-text-weight-bold\">\n                      Publisher: {publisherHandler(publisher)}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"content\">\n                  {descriptionHandler(description)}\n                  <br />\n                  <span className=\"has-text-grey has-text-weight-bold\">\n                    Date: \n                    <time dateTime={publishedDateHandler(publishedDate)}>\n                      {publishedDateHandler(publishedDate)}\n                    </time>\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n        );\n      })}\n    </React.Fragment>\n  );\n};\n\nexport default BookCard;\n","import React from \"react\";\nimport Spinner from \"./Spinner\";\nimport BookCard from \"./BookCard\";\nconst Main = props => {\n  const Loading = props.isLoading ? <Spinner /> : undefined;\n  const isDataLoaded =\n    props.isDataLoaded && props.data.totalItems > 0 ? (\n      <BookCard data={props.data} />\n    ) : (\n      <div className=\"column\">\n        <h3 className=\"is-size-5 has-text-danger has-text-centered has-text-weight-bold\">\n          No Books, Try to search!\n        </h3>\n      </div>\n    );\n  return (\n    <React.Fragment>\n      {/* Books Cards */}\n      <section className=\"section\">\n        <div className=\"container\">\n          {Loading}\n          <div className=\"columns is-mobile is-multiline\">{isDataLoaded}</div>\n        </div>\n      </section>\n      {/* End Books Cards */}\n    </React.Fragment>\n  );\n};\n\nexport default Main;\n","import React from \"react\";\n\nconst Footer = () => {\n  return (\n    <React.Fragment>\n      {/* Footer */}\n      <footer className=\"footer\">\n        <div className=\"content has-text-centered\">\n          <p>\n            <strong>Book Finder</strong> by \n            <a href=\"https:github.com/cranknet\"> Bechar</a>\n          </p>\n        </div>\n      </footer>\n      {/* End Footer */}\n    </React.Fragment>\n  );\n};\n\nexport default Footer;\n","import React, { Component } from \"react\";\n\nexport default class SearchInput extends Component {\n  handleChange = e => {\n    this.props.handler(e.target.value);\n  };\n  handleKeyUp = e => {\n    this.props.keyUpHandler(e);\n  };\n\n  render() {\n    const { isLoading, searchValue } = this.props;\n    const inputSpinner = isLoading ? \"is-loading\" : \"\";\n    return (\n      <React.Fragment>\n        <div className=\"field\">\n          <div className={`control has-icons-left is-large ${inputSpinner}`}>\n            <input\n              type=\"text\"\n              className=\"input is-large is-rounded\"\n              placeholder=\"Search\"\n              name=\"search\"\n              value={searchValue}\n              onChange={this.handleChange}\n              onKeyUp={this.handleKeyUp}\n            />\n            <span className=\"icon is-medium is-left\">\n              <i className=\"fa fa-search\" />\n            </span>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n","export const API_URL = \"https://www.googleapis.com/books/v1/volumes?q=intitle:\";\nexport const API_URL_FIELDS =\n  \"totalItems,items(volumeInfo(title, authors, publisher, publishedDate, description,  imageLinks/thumbnail, infoLink))\";\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n// Spinner CSS Center\nimport \"./css/spinner.css\";\nimport Header from \"./components/Header\";\nimport Main from \"./components/Main\";\nimport Footer from \"./components/Footer\";\nimport SearchInput from \"./components/SearchInput\";\nimport { API_URL, API_URL_FIELDS } from \"./constants/constants\";\nclass App extends Component {\n  state = {\n    searchValue: \"\",\n    isLoading: false,\n    booksData: [],\n    dataLoaded: false,\n    error: null\n  };\n  handleInput = value => {\n    this.setState({\n      searchValue: value\n    });\n  };\n  handleSearch = e => {\n    const { searchValue } = this.state;\n    if (e.keyCode === 13) {\n      if (searchValue.length >= 3) {\n        const API = `${API_URL}${searchValue}&fields=${API_URL_FIELDS}`;\n        this.getBooks(API);\n      }\n    }\n  };\n\n  getBooks = URL => {\n    this.setState({ isLoading: true });\n    axios\n      .get(URL)\n      .then(result => {\n        this.setState({\n          booksData: result.data,\n          isLoading: false,\n          dataLoaded: true\n        });\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({\n          error: err,\n          isLoading: false\n        });\n      });\n  };\n\n  render() {\n    const { searchValue, isLoading, booksData, dataLoaded } = this.state;\n    return (\n      <React.Fragment>\n        <Header>\n          <SearchInput\n            handler={this.handleInput}\n            keyUpHandler={this.handleSearch}\n            searchValue={searchValue}\n            isLoading={isLoading}\n          />\n        </Header>\n        <Main\n          isLoading={isLoading}\n          data={booksData}\n          isDataLoaded={dataLoaded}\n        />\n        <Footer />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// Bulma CSS\nimport \"bulma/css/bulma.min.css\";\n// Font Awesome CSS\nimport \"font-awesome/css/font-awesome.min.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}